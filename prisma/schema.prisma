generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model admin_photos {
  id           String   @id
  filename     String
  path         String
  url          String
  folder       String
  originalName String
  size         Int
  uploadedById String
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  users        users    @relation(fields: [uploadedById], references: [id], onDelete: Cascade)
}

model invite_tokens {
  id          String    @id
  email       String
  token       String    @unique
  expiresAt   DateTime
  consumedAt  DateTime?
  createdById String
  createdAt   DateTime  @default(now())
}

model notes {
  id           String   @id
  talentUserId String
  adminUserId  String
  body         String
  createdAt    DateTime @default(now())
  users        users    @relation(fields: [adminUserId], references: [id], onDelete: Cascade)
}

model profiles {
  id          String   @id
  userId      String   @unique
  displayName String
  bio         String?
  hobbies     String[]
  socialLinks Json?
  avatarUrl   String?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  users       users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model users {
  id           String         @id
  email        String         @unique
  role         String         @default("user")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  admin_photos admin_photos[]
  notes        notes[]
  profiles     profiles?
}
